# coding: utf-8

"""
    airfocus API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0-beta.37.8.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from airfocus_client.models.item_with_md_with_item_embed_page import ItemWithMDWithItemEmbedPage

class TestItemWithMDWithItemEmbedPage(unittest.TestCase):
    """ItemWithMDWithItemEmbedPage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ItemWithMDWithItemEmbedPage:
        """Test ItemWithMDWithItemEmbedPage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ItemWithMDWithItemEmbedPage`
        """
        model = ItemWithMDWithItemEmbedPage()
        if include_optional:
            return ItemWithMDWithItemEmbedPage(
                total_items = 56,
                items = [
                    airfocus_client.models.item_with_md_with_item_embed.ItemWithMDWithItemEmbed(
                        _embedded = airfocus_client.models.item_embed.ItemEmbed(
                            alias = '', 
                            apps = {
                                'key' : airfocus_client.models.item_embed_app.ItemEmbedApp(
                                    data = null, 
                                    id = '', 
                                    type_id = '', )
                                }, 
                            attachment_count = 56, 
                            children = [
                                airfocus_client.models.relative_item_info.RelativeItemInfo(
                                    alias = '', 
                                    child_order = 56, 
                                    item = airfocus_client.models.item.Item(
                                        archived = True, 
                                        assignee_user_ids = [
                                            ''
                                            ], 
                                        color = 'amber', 
                                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        description = airfocus_client.models.rich_text.RichText(
                                            blocks = [
                                                null
                                                ], ), 
                                        fields = {
                                            'key' : null
                                            }, 
                                        id = '', 
                                        last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        name = '', 
                                        number = 56, 
                                        order = 56, 
                                        status_category_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        status_id = '', 
                                        status_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        workspace_id = '', ), 
                                    item_id = '', 
                                    item_type = 'bug', 
                                    parent_order = 56, 
                                    relation_id = '', 
                                    workspace_id = '', )
                                ], 
                            comment_count = 56, 
                            constraints = [
                                null
                                ], 
                            integration = airfocus_client.models.item_embed_integration.ItemEmbedIntegration(
                                data = null, 
                                id = '', 
                                type_id = '', ), 
                            link_count = 56, 
                            parents = [
                                airfocus_client.models.relative_item_info.RelativeItemInfo(
                                    alias = '', 
                                    child_order = 56, 
                                    item_id = '', 
                                    parent_order = 56, 
                                    relation_id = '', 
                                    workspace_id = '', )
                                ], 
                            progress = airfocus_client.models.item_embed_progress.ItemEmbedProgress(
                                closed = 56, 
                                total = 56, ), 
                            watched = True, 
                            workspace_item_type = 'bug', ), 
                        archived = True, 
                        assignee_user_ids = [
                            ''
                            ], 
                        color = 'amber', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        fields = {
                            'key' : null
                            }, 
                        id = '', 
                        last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        number = 56, 
                        order = 56, 
                        status_category_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status_id = '', 
                        status_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        workspace_id = '', )
                    ]
            )
        else:
            return ItemWithMDWithItemEmbedPage(
                total_items = 56,
        )
        """

    def testItemWithMDWithItemEmbedPage(self):
        """Test ItemWithMDWithItemEmbedPage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
